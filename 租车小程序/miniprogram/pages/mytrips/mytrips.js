"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const profile_1 = require("../../service/profile");
const rental_pb_1 = require("../../service/proto_gen/rental/rental_pb");
const trip_1 = require("../../service/trip");
const format_1 = require("../../utils/format");
const routing_1 = require("../../utils/routing");
const tripStatusMap = new Map([
    [rental_pb_1.rental.v1.TripStatus.IN_PROGRESS, '进行中'],
    [rental_pb_1.rental.v1.TripStatus.FINISHED, '已完成'],
]);
const licStatusMap = new Map([
    [rental_pb_1.rental.v1.IdentityStatus.UNSUBMITTED, '未认证'],
    [rental_pb_1.rental.v1.IdentityStatus.PENDING, '未认证'],
    [rental_pb_1.rental.v1.IdentityStatus.VERIFIED, '已认证'],
]);
Page({
    scrollStates: {
        mainItems: [],
    },
    layoutResolver: undefined,
    data: {
        promotionItems: [
            {
                img: 'https://img.mukewang.com/5f7301d80001fdee18720764.jpg',
                promotionID: 1,
            },
            {
                img: 'https://img.mukewang.com/5f6805710001326c18720764.jpg',
                promotionID: 2,
            },
            {
                img: 'https://img.mukewang.com/5f6173b400013d4718720764.jpg',
                promotionID: 3,
            },
            {
                img: 'https://img.mukewang.com/5f7141ad0001b36418720764.jpg',
                promotionID: 4,
            },
        ],
        licStatus: licStatusMap.get(rental_pb_1.rental.v1.IdentityStatus.UNSUBMITTED),
        avatarURL: '',
        tripsHeight: 0,
        navCount: 0,
        mainItems: [],
        mainScroll: '',
        navItems: [],
        navSel: '',
        navScroll: '',
    },
    onLoad() {
        const layoutReady = new Promise((resolve) => {
            this.layoutResolver = void (resolve);
        });
        Promise.all([trip_1.TripService.getTrips(), layoutReady]).then(([trips]) => {
            this.populateTrips(trips.trips);
        });
        getApp().globalData.userInfo.then(userInfo => {
            this.setData({
                avatarURL: userInfo.avatarUrl,
            });
        });
        profile_1.ProfileService.getProfile().then(p => {
            this.setData({
                licStatus: licStatusMap.get(p.identityStatus || 0),
            });
        });
    },
    onShow() {
        profile_1.ProfileService.getProfile().then(p => {
            this.setData({
                licStatus: licStatusMap.get(p.identityStatus || 0),
            });
        });
    },
    onReady() {
        wx.createSelectorQuery().select('#heading')
            .boundingClientRect(rect => {
            const height = wx.getSystemInfoSync().windowHeight - rect.height;
            this.setData({
                tripsHeight: height,
                navCount: Math.round(height / 50),
            }, () => {
                if (this.layoutResolver) {
                    this.layoutResolver();
                }
            });
        }).exec();
    },
    populateTrips(trips) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        const mainItems = [];
        const navItems = [];
        let navSel = '';
        let prevNav = '';
        for (let i = 0; i < trips.length; i++) {
            const trip = trips[i];
            const mainId = 'main-' + i;
            const navId = 'nav-' + i;
            const shortId = (_a = trip.id) === null || _a === void 0 ? void 0 : _a.substr(trip.id.length - 6);
            if (!prevNav) {
                prevNav = navId;
            }
            const tripData = {
                id: trip.id,
                shortId: '****' + shortId,
                start: ((_c = (_b = trip.trip) === null || _b === void 0 ? void 0 : _b.start) === null || _c === void 0 ? void 0 : _c.poiName) || '未知',
                end: '',
                distance: '',
                duration: '',
                fee: '',
                status: tripStatusMap.get((_d = trip.trip) === null || _d === void 0 ? void 0 : _d.status) || '未知',
                inProgress: ((_e = trip.trip) === null || _e === void 0 ? void 0 : _e.status) === rental_pb_1.rental.v1.TripStatus.IN_PROGRESS,
            };
            const end = (_f = trip.trip) === null || _f === void 0 ? void 0 : _f.end;
            if (end) {
                tripData.end = end.poiName || '未知',
                    tripData.distance = ((_g = end.kmDriven) === null || _g === void 0 ? void 0 : _g.toFixed(1)) + '公里',
                    tripData.fee = format_1.formatFee(end.feeCent || 0);
                const dur = format_1.formatDuration((end.timestampSec || 0) - (((_j = (_h = trip.trip) === null || _h === void 0 ? void 0 : _h.start) === null || _j === void 0 ? void 0 : _j.timestampSec) || 0));
                tripData.duration = `${dur.hh}时${dur.mm}分`;
            }
            mainItems.push({
                id: mainId,
                navId: navId,
                navScrollId: prevNav,
                data: tripData,
            });
            navItems.push({
                id: navId,
                mainId: mainId,
                label: shortId || '',
            });
            if (i === 0) {
                navSel = navId;
            }
            prevNav = navId;
        }
        for (let i = 0; i < this.data.navCount - 1; i++) {
            navItems.push({
                id: '',
                mainId: '',
                label: '',
            });
        }
        this.setData({
            mainItems,
            navItems,
            navSel,
        }, () => {
            this.prepareScrollStates();
        });
    },
    prepareScrollStates() {
        wx.createSelectorQuery().selectAll('.main-item')
            .fields({
            id: true,
            dataset: true,
            rect: true,
        }).exec(res => {
            this.scrollStates.mainItems = res[0];
        });
    },
    onPromotionItemTap(e) {
        const promotionID = e.currentTarget.dataset.promotionId;
        if (promotionID) {
            console.log('claiming promotion', promotionID);
        }
    },
    onGetUserInfo(e) {
        const userInfo = e.detail.userInfo;
        if (userInfo) {
            getApp().resolveUserInfo(userInfo);
            this.setData({
                avatarURL: userInfo.avatarUrl,
            });
        }
    },
    onRegisterTap() {
        wx.navigateTo({
            url: routing_1.routing.register(),
        });
    },
    onNavItemTap(e) {
        var _a, _b, _c;
        const mainId = (_b = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.dataset) === null || _b === void 0 ? void 0 : _b.mainId;
        const navId = (_c = e.currentTarget) === null || _c === void 0 ? void 0 : _c.id;
        if (mainId && navId) {
            this.setData({
                mainScroll: mainId,
                navSel: navId,
            });
        }
    },
    onMainScroll(e) {
        var _a, _b;
        const top = ((_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.offsetTop) + ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.scrollTop);
        if (top === undefined) {
            return;
        }
        const selItem = this.scrollStates.mainItems.find(v => v.top >= top);
        if (!selItem) {
            return;
        }
        this.setData({
            navSel: selItem.dataset.navId,
            navScroll: selItem.dataset.navScrollId,
        });
    },
    onMianItemTap(e) {
        if (!e.currentTarget.dataset.tripInProgress) {
            return;
        }
        const tripId = e.currentTarget.dataset.tripId;
        if (tripId) {
            wx.redirectTo({
                url: routing_1.routing.drving({
                    trip_id: tripId,
                }),
            });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXl0cmlwcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm15dHJpcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxtREFBc0Q7QUFDdEQsd0VBQWlFO0FBQ2pFLDZDQUFnRDtBQUNoRCwrQ0FBOEQ7QUFDOUQsaURBQTZDO0FBb0M3QyxNQUFNLGFBQWEsR0FBRyxJQUFJLEdBQUcsQ0FBQztJQUMxQixDQUFDLGtCQUFNLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDO0lBQ3pDLENBQUMsa0JBQU0sQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUM7Q0FDekMsQ0FBQyxDQUFBO0FBRUYsTUFBTSxZQUFZLEdBQUcsSUFBSSxHQUFHLENBQUM7SUFDekIsQ0FBQyxrQkFBTSxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQztJQUM3QyxDQUFDLGtCQUFNLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDO0lBQ3pDLENBQUMsa0JBQU0sQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUM7Q0FDN0MsQ0FBQyxDQUFBO0FBRUYsSUFBSSxDQUFDO0lBQ0QsWUFBWSxFQUFFO1FBQ1YsU0FBUyxFQUFFLEVBQTJCO0tBQ3pDO0lBRUQsY0FBYyxFQUFFLFNBQWlDO0lBRWpELElBQUksRUFBRTtRQUNGLGNBQWMsRUFBRTtZQUNaO2dCQUNJLEdBQUcsRUFBRSx1REFBdUQ7Z0JBQzVELFdBQVcsRUFBRSxDQUFDO2FBQ2pCO1lBQ0Q7Z0JBQ0ksR0FBRyxFQUFFLHVEQUF1RDtnQkFDNUQsV0FBVyxFQUFFLENBQUM7YUFDakI7WUFDRDtnQkFDSSxHQUFHLEVBQUUsdURBQXVEO2dCQUM1RCxXQUFXLEVBQUUsQ0FBQzthQUNqQjtZQUNEO2dCQUNJLEdBQUcsRUFBRSx1REFBdUQ7Z0JBQzVELFdBQVcsRUFBRSxD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QztvQkFDaEIsT0FBTyxFQUFFLE1BQU07aUJBQ2xCLENBQUM7YUFDTCxDQUFDLENBQUE7U0FDTDtJQUNMLENBQUM7Q0FDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQXBwT3B0aW9uIH0gZnJvbSBcIi4uLy4uL2FwcG9wdGlvblwiXG5pbXBvcnQgeyBQcm9maWxlU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlL3Byb2ZpbGVcIlxuaW1wb3J0IHsgcmVudGFsIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2UvcHJvdG9fZ2VuL3JlbnRhbC9yZW50YWxfcGJcIlxuaW1wb3J0IHsgVHJpcFNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZS90cmlwXCJcbmltcG9ydCB7IGZvcm1hdER1cmF0aW9uLCBmb3JtYXRGZWUgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZm9ybWF0XCJcbmltcG9ydCB7IHJvdXRpbmcgfSBmcm9tIFwiLi4vLi4vdXRpbHMvcm91dGluZ1wiXG5cbmludGVyZmFjZSBUcmlwIHtcbiAgICBpZDogc3RyaW5nXG4gICAgc2hvcnRJZDogc3RyaW5nXG4gICAgc3RhcnQ6IHN0cmluZ1xuICAgIGVuZDogc3RyaW5nXG4gICAgZHVyYXRpb246IHN0cmluZ1xuICAgIGZlZTogc3RyaW5nXG4gICAgZGlzdGFuY2U6IHN0cmluZ1xuICAgIHN0YXR1czogc3RyaW5nXG4gICAgaW5Qcm9ncmVzczogYm9vbGVhblxufVxuXG5pbnRlcmZhY2UgTWFpbkl0ZW0ge1xuICAgIGlkOiBzdHJpbmdcbiAgICBuYXZJZDogc3RyaW5nXG4gICAgbmF2U2Nyb2xsSWQ6IHN0cmluZ1xuICAgIGRhdGE6IFRyaXBcbn1cblxuaW50ZXJmYWNlIE5hdkl0ZW0ge1xuICAgIGlkOiBzdHJpbmdcbiAgICBtYWluSWQ6IHN0cmluZ1xuICAgIGxhYmVsOiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIE1haW5JdGVtUXVlcnlSZXN1bHQge1xuICAgIGlkOiBzdHJpbmdcbiAgICB0b3A6IG51bWJlclxuICAgIGRhdGFzZXQ6IHtcbiAgICAgICAgbmF2SWQ6IHN0cmluZ1xuICAgICAgICBuYXZTY3JvbGxJZDogc3RyaW5nXG4gICAgfVxufVxuXG5jb25zdCB0cmlwU3RhdHVzTWFwID0gbmV3IE1hcChbXG4gICAgW3JlbnRhbC52MS5UcmlwU3RhdHVzLklOX1BST0dSRVNTLCAn6L+b6KGM5LitJ10sXG4gICAgW3JlbnRhbC52MS5UcmlwU3RhdHVzLkZJTklTSEVELCAn5bey5a6M5oiQJ10sXG5dKVxuXG5jb25zdCBsaWNTdGF0dXNNYXAgPSBuZXcgTWFwKFtcbiAgICBbcmVudGFsLnYxLklkZW50aXR5U3RhdHVzLlVOU1VCTUlUVEVELCAn5pyq6K6k6K+BJ10sXG4gICAgW3JlbnRhbC52MS5JZGVudGl0eVN0YXR1cy5QRU5ESU5HLCAn5pyq6K6k6K+BJ10sXG4gICAgW3JlbnRhbC52MS5JZGVudGl0eVN0YXR1cy5WRVJJRklFRCwgJ+W3suiupOivgSddLFxuXSlcblxuUGFnZSh7XG4gICAgc2Nyb2xsU3RhdGVzOiB7XG4gICAgICAgIG1haW5JdGVtczogW10gYXMgTWFpbkl0ZW1RdWVyeVJlc3VsdFtdLFxuICAgIH0sXG5cbiAgICBsYXlvdXRSZXNvbHZlcjogdW5kZWZpbmVkIGFzICgoKT0+dm9pZCl8dW5kZWZpbmVkLFxuXG4gICAgZGF0YToge1xuICAgICAgICBwcm9tb3Rpb25JdGVtczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGltZzogJ2h0dHBzOi8vaW1nLm11a2V3YW5nLmNvbS81ZjczMDFkODAwMDFmZGVlMTg3MjA3NjQuanBnJyxcbiAgICAgICAgICAgICAgICBwcm9tb3Rpb25JRDogMSxcbiAgICAgICAgICAgIH0sICAgICAgICAgICAgXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1nOiAnaHR0cHM6Ly9pbWcubXVrZXdhbmcuY29tLzVmNjgwNTcxMDAwMTMyNmMxODcyMDc2NC5qcGcnLFxuICAgICAgICAgICAgICAgIHByb21vdGlvbklEOiAyLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbWc6ICdodHRwczovL2ltZy5tdWtld2FuZy5jb20vNWY2MTczYjQwMDAxM2Q0NzE4NzIwNzY0LmpwZycsXG4gICAgICAgICAgICAgICAgcHJvbW90aW9uSUQ6IDMsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGltZzogJ2h0dHBzOi8vaW1nLm11a2V3YW5nLmNvbS81ZjcxNDFhZDAwMDFiMzY0MTg3MjA3NjQuanBnJyxcbiAgICAgICAgICAgICAgICBwcm9tb3Rpb25JRDogNCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxpY1N0YXR1czogbGljU3RhdHVzTWFwLmdldChyZW50YWwudjEuSWRlbnRpdHlTdGF0dXMuVU5TVUJNSVRURUQpLFxuICAgICAgICBhdmF0YXJVUkw6ICcnLFxuICAgICAgICB0cmlwc0hlaWdodDogMCxcbiAgICAgICAgbmF2Q291bnQ6IDAsXG4gICAgICAgIG1haW5JdGVtczogW10gYXMgTWFpbkl0ZW1bXSxcbiAgICAgICAgbWFpblNjcm9sbDogJycsXG4gICAgICAgIG5hdkl0ZW1zOiBbXSBhcyBOYXZJdGVtW10sXG4gICAgICAgIG5hdlNlbDogJycsXG4gICAgICAgIG5hdlNjcm9sbDogJycsXG4gICAgfSxcblxuICAgIG9uTG9hZCgpIHtcbiAgICAgICAgY29uc3QgbGF5b3V0UmVhZHkgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5sYXlvdXRSZXNvbHZlciA9IHZvaWQocmVzb2x2ZSlcbiAgICAgICAgfSlcbiAgICAgICAgUHJvbWlzZS5hbGwoW1RyaXBTZXJ2aWNlLmdldFRyaXBzKCksIGxheW91dFJlYWR5XSkudGhlbigoW3RyaXBzXSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5wb3B1bGF0ZVRyaXBzKHRyaXBzLnRyaXBzISlcbiAgICAgICAgfSlcbiAgICAgICAgZ2V0QXBwPElBcHBPcHRpb24+KCkuZ2xvYmFsRGF0YS51c2VySW5mby50aGVuKHVzZXJJbmZvID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgYXZhdGFyVVJMOiB1c2VySW5mby5hdmF0YXJVcmwsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgICBQcm9maWxlU2VydmljZS5nZXRQcm9maWxlKCkudGhlbihwPT57XG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgICAgIGxpY1N0YXR1czpsaWNTdGF0dXNNYXAuZ2V0KHAuaWRlbnRpdHlTdGF0dXN8fDApLFxuICAgICAgICAgICAgfSlcblxuICAgICAgICB9KVxuICAgIH0sXG5cbiAgICBvblNob3coKSB7XG4gICAgICAgIFByb2ZpbGVTZXJ2aWNlLmdldFByb2ZpbGUoKS50aGVuKHAgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICBsaWNTdGF0dXM6IGxpY1N0YXR1c01hcC5nZXQocC5pZGVudGl0eVN0YXR1c3x8MCksXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH0sXG5cbiAgICBvblJlYWR5KCkge1xuICAgICAgICB3eC5jcmVhdGVTZWxlY3RvclF1ZXJ5KCkuc2VsZWN0KCcjaGVhZGluZycpXG4gICAgICAgICAgICAuYm91bmRpbmdDbGllbnRSZWN0KHJlY3QgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IHd4LmdldFN5c3RlbUluZm9TeW5jKCkud2luZG93SGVpZ2h0IC0gcmVjdC5oZWlnaHRcbiAgICAgICAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgICAgICAgICB0cmlwc0hlaWdodDogaGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICBuYXZDb3VudDogTWF0aC5yb3VuZChoZWlnaHQvNTApLFxuICAgICAgICAgICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGF5b3V0UmVzb2x2ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGF5b3V0UmVzb2x2ZXIoKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pLmV4ZWMoKVxuICAgIH0sXG5cbiAgICBwb3B1bGF0ZVRyaXBzKHRyaXBzOiByZW50YWwudjEuSVRyaXBFbnRpdHlbXSkge1xuICAgICAgICBjb25zdCBtYWluSXRlbXM6IE1haW5JdGVtW10gPSBbXVxuICAgICAgICBjb25zdCBuYXZJdGVtczogTmF2SXRlbVtdID0gW11cbiAgICAgICAgbGV0IG5hdlNlbCA9ICcnXG4gICAgICAgIGxldCBwcmV2TmF2ID0gJydcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmlwcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgdHJpcCA9IHRyaXBzW2ldXG4gICAgICAgICAgICBjb25zdCBtYWluSWQgPSAnbWFpbi0nICsgaVxuICAgICAgICAgICAgY29uc3QgbmF2SWQgPSAnbmF2LScgKyBpXG4gICAgICAgICAgICBjb25zdCBzaG9ydElkID0gdHJpcC5pZD8uc3Vic3RyKHRyaXAuaWQubGVuZ3RoLTYpXG4gICAgICAgICAgICBpZiAoIXByZXZOYXYpIHtcbiAgICAgICAgICAgICAgICBwcmV2TmF2ID0gbmF2SWRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHRyaXBEYXRhOiBUcmlwID0ge1xuICAgICAgICAgICAgICAgIGlkOiB0cmlwLmlkISxcbiAgICAgICAgICAgICAgICBzaG9ydElkOiAnKioqKicrc2hvcnRJZCxcbiAgICAgICAgICAgICAgICBzdGFydDogdHJpcC50cmlwPy5zdGFydD8ucG9pTmFtZXx8J+acquefpScsXG4gICAgICAgICAgICAgICAgZW5kOiAnJyxcbiAgICAgICAgICAgICAgICBkaXN0YW5jZTogJycsXG4gICAgICAgICAgICAgICAgZHVyYXRpb246ICcnLFxuICAgICAgICAgICAgICAgIGZlZTogJycsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiB0cmlwU3RhdHVzTWFwLmdldCh0cmlwLnRyaXA/LnN0YXR1cyEpfHwn5pyq55+lJyxcbiAgICAgICAgICAgICAgICBpblByb2dyZXNzOiB0cmlwLnRyaXA/LnN0YXR1cyA9PT0gIHJlbnRhbC52MS5UcmlwU3RhdHVzLklOX1BST0dSRVNTLFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZW5kID0gdHJpcC50cmlwPy5lbmRcbiAgICAgICAgICAgIGlmIChlbmQpIHtcbiAgICAgICAgICAgICAgICB0cmlwRGF0YS5lbmQgPSBlbmQucG9pTmFtZXx8J+acquefpScsXG4gICAgICAgICAgICAgICAgdHJpcERhdGEuZGlzdGFuY2UgPSBlbmQua21Ecml2ZW4/LnRvRml4ZWQoMSkrJ+WFrOmHjCcsXG4gICAgICAgICAgICAgICAgdHJpcERhdGEuZmVlID0gZm9ybWF0RmVlKGVuZC5mZWVDZW50fHwwKVxuICAgICAgICAgICAgICAgIGNvbnN0IGR1ciA9IGZvcm1hdER1cmF0aW9uKChlbmQudGltZXN0YW1wU2VjfHwwKSAtICh0cmlwLnRyaXA/LnN0YXJ0Py50aW1lc3RhbXBTZWN8fDApKVxuICAgICAgICAgICAgICAgIHRyaXBEYXRhLmR1cmF0aW9uID0gYCR7ZHVyLmhofeaXtiR7ZHVyLm1tfeWIhmBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1haW5JdGVtcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBpZDogbWFpbklkLFxuICAgICAgICAgICAgICAgIG5hdklkOiBuYXZJZCxcbiAgICAgICAgICAgICAgICBuYXZTY3JvbGxJZDogcHJldk5hdixcbiAgICAgICAgICAgICAgICBkYXRhOiB0cmlwRGF0YSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBuYXZJdGVtcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBpZDogbmF2SWQsXG4gICAgICAgICAgICAgICAgbWFpbklkOiBtYWluSWQsXG4gICAgICAgICAgICAgICAgbGFiZWw6IHNob3J0SWR8fCcnLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGlmIChpID09PSAwKSB7XG4gICAgICAgICAgICAgICAgbmF2U2VsID0gbmF2SWRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByZXZOYXYgPSBuYXZJZFxuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5kYXRhLm5hdkNvdW50LTE7IGkrKykge1xuICAgICAgICAgICAgbmF2SXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgaWQ6ICcnLFxuICAgICAgICAgICAgICAgIG1haW5JZDogJycsXG4gICAgICAgICAgICAgICAgbGFiZWw6ICcnLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgbWFpbkl0ZW1zLFxuICAgICAgICAgICAgbmF2SXRlbXMsXG4gICAgICAgICAgICBuYXZTZWwsXG4gICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucHJlcGFyZVNjcm9sbFN0YXRlcygpXG4gICAgICAgIH0pXG4gICAgfSxcblxuICAgIHByZXBhcmVTY3JvbGxTdGF0ZXMoKSB7XG4gICAgICAgIHd4LmNyZWF0ZVNlbGVjdG9yUXVlcnkoKS5zZWxlY3RBbGwoJy5tYWluLWl0ZW0nKVxuICAgICAgICAgICAgLmZpZWxkcyh7XG4gICAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgZGF0YXNldDogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZWN0OiB0cnVlLFxuICAgICAgICAgICAgfSkuZXhlYyhyZXMgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsU3RhdGVzLm1haW5JdGVtcyA9IHJlc1swXVxuICAgICAgICAgICAgfSlcbiAgICB9LFxuXG4gICAgb25Qcm9tb3Rpb25JdGVtVGFwKGU6IGFueSkge1xuICAgICAgICBjb25zdCBwcm9tb3Rpb25JRDpudW1iZXIgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5wcm9tb3Rpb25JZFxuICAgICAgICBpZiAocHJvbW90aW9uSUQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbGFpbWluZyBwcm9tb3Rpb24nLCBwcm9tb3Rpb25JRClcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBvbkdldFVzZXJJbmZvKGU6IGFueSkge1xuICAgICAgICBjb25zdCB1c2VySW5mbzogV2VjaGF0TWluaXByb2dyYW0uVXNlckluZm8gPSBlLmRldGFpbC51c2VySW5mb1xuICAgICAgICBpZiAodXNlckluZm8pIHtcbiAgICAgICAgICAgIGdldEFwcDxJQXBwT3B0aW9uPigpLnJlc29sdmVVc2VySW5mbyh1c2VySW5mbylcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgYXZhdGFyVVJMOiB1c2VySW5mby5hdmF0YXJVcmwsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIG9uUmVnaXN0ZXJUYXAoKSB7XG4gICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgdXJsOiByb3V0aW5nLnJlZ2lzdGVyKCksXG4gICAgICAgIH0pXG4gICAgfSxcblxuICAgIG9uTmF2SXRlbVRhcChlOiBhbnkpIHtcbiAgICAgICAgY29uc3QgbWFpbklkOiBzdHJpbmcgPSBlLmN1cnJlbnRUYXJnZXQ/LmRhdGFzZXQ/Lm1haW5JZFxuICAgICAgICBjb25zdCBuYXZJZDogc3RyaW5nID0gZS5jdXJyZW50VGFyZ2V0Py5pZFxuICAgICAgICBpZiAobWFpbklkICYmIG5hdklkKSB7XG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgICAgIG1haW5TY3JvbGw6IG1haW5JZCxcbiAgICAgICAgICAgICAgICBuYXZTZWw6IG5hdklkLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBvbk1haW5TY3JvbGwoZTogYW55KSB7XG4gICAgICAgIGNvbnN0IHRvcDogbnVtYmVyID0gZS5jdXJyZW50VGFyZ2V0Py5vZmZzZXRUb3AgKyBlLmRldGFpbD8uc2Nyb2xsVG9wXG4gICAgICAgIGlmICh0b3AgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzZWxJdGVtID0gdGhpcy5zY3JvbGxTdGF0ZXMubWFpbkl0ZW1zLmZpbmQoXG4gICAgICAgICAgICB2ID0+IHYudG9wID49IHRvcClcbiAgICAgICAgaWYgKCFzZWxJdGVtKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICBuYXZTZWw6IHNlbEl0ZW0uZGF0YXNldC5uYXZJZCxcbiAgICAgICAgICAgIG5hdlNjcm9sbDogc2VsSXRlbS5kYXRhc2V0Lm5hdlNjcm9sbElkLFxuICAgICAgICB9KVxuICAgIH0sXG5cbiAgICBvbk1pYW5JdGVtVGFwKGU6IGFueSkge1xuICAgICAgICBpZiAoIWUuY3VycmVudFRhcmdldC5kYXRhc2V0LnRyaXBJblByb2dyZXNzKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0cmlwSWQgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC50cmlwSWRcbiAgICAgICAgaWYgKHRyaXBJZCkge1xuICAgICAgICAgICAgd3gucmVkaXJlY3RUbyh7XG4gICAgICAgICAgICAgICAgdXJsOiByb3V0aW5nLmRydmluZyh7XG4gICAgICAgICAgICAgICAgICAgIHRyaXBfaWQ6IHRyaXBJZCxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG59KVxuIl19